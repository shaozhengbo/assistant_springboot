<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shao.dao.OvertimeMapper">
  <resultMap id="BaseResultMap" type="com.shao.pojo.Overtime">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <id column="year" jdbcType="VARCHAR" property="year" />
    <id column="month" jdbcType="VARCHAR" property="month" />
    <id column="day" jdbcType="VARCHAR" property="day" />
    <result column="time" jdbcType="REAL" property="time" />
    <result column="used" jdbcType="REAL" property="used" />
    <result column="unused" jdbcType="REAL" property="unused" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, year, month, day, time, used, unused, status, createtime, updatetime
  </sql>
  <select id="selectByExample" parameterType="com.shao.pojo.OvertimeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from overtime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.shao.pojo.OvertimeKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from overtime
    where uid = #{uid,jdbcType=BIGINT}
      and year = #{year,jdbcType=VARCHAR}
      and month = #{month,jdbcType=VARCHAR}
      and day = #{day,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.shao.pojo.OvertimeKey">
    delete from overtime
    where uid = #{uid,jdbcType=BIGINT}
      and year = #{year,jdbcType=VARCHAR}
      and month = #{month,jdbcType=VARCHAR}
      and day = #{day,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.shao.pojo.OvertimeExample">
    delete from overtime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shao.pojo.Overtime">
    insert into overtime (uid, year, month, 
      day, time, used, unused, 
      status, createtime, updatetime
      )
    values (#{uid,jdbcType=BIGINT}, #{year,jdbcType=VARCHAR}, #{month,jdbcType=VARCHAR}, 
      #{day,jdbcType=VARCHAR}, #{time,jdbcType=REAL}, #{used,jdbcType=REAL}, #{unused,jdbcType=REAL}, 
      #{status,jdbcType=TINYINT}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shao.pojo.Overtime">
    insert into overtime
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="month != null">
        month,
      </if>
      <if test="day != null">
        day,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="used != null">
        used,
      </if>
      <if test="unused != null">
        unused,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="year != null">
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="month != null">
        #{month,jdbcType=VARCHAR},
      </if>
      <if test="day != null">
        #{day,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=REAL},
      </if>
      <if test="used != null">
        #{used,jdbcType=REAL},
      </if>
      <if test="unused != null">
        #{unused,jdbcType=REAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shao.pojo.OvertimeExample" resultType="java.lang.Long">
    select count(*) from overtime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update overtime
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.month != null">
        month = #{record.month,jdbcType=VARCHAR},
      </if>
      <if test="record.day != null">
        day = #{record.day,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=REAL},
      </if>
      <if test="record.used != null">
        used = #{record.used,jdbcType=REAL},
      </if>
      <if test="record.unused != null">
        unused = #{record.unused,jdbcType=REAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update overtime
    set uid = #{record.uid,jdbcType=BIGINT},
      year = #{record.year,jdbcType=VARCHAR},
      month = #{record.month,jdbcType=VARCHAR},
      day = #{record.day,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=REAL},
      used = #{record.used,jdbcType=REAL},
      unused = #{record.unused,jdbcType=REAL},
      status = #{record.status,jdbcType=TINYINT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shao.pojo.Overtime">
    update overtime
    <set>
      <if test="time != null">
        time = #{time,jdbcType=REAL},
      </if>
      <if test="used != null">
        used = #{used,jdbcType=REAL},
      </if>
      <if test="unused != null">
        unused = #{unused,jdbcType=REAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where uid = #{uid,jdbcType=BIGINT}
      and year = #{year,jdbcType=VARCHAR}
      and month = #{month,jdbcType=VARCHAR}
      and day = #{day,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shao.pojo.Overtime">
    update overtime
    set time = #{time,jdbcType=REAL},
      used = #{used,jdbcType=REAL},
      unused = #{unused,jdbcType=REAL},
      status = #{status,jdbcType=TINYINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=BIGINT}
      and year = #{year,jdbcType=VARCHAR}
      and month = #{month,jdbcType=VARCHAR}
      and day = #{day,jdbcType=VARCHAR}
  </update>
</mapper>